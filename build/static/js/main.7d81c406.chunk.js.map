{"version":3,"sources":["components/NavBar.jsx","common/api.js","views/driver/components/DriverComponent.jsx","views/driver/containers/DriverContainer.jsx","components/input/InputCpf.js","views/driver/components/DriverFormComponent.jsx","views/driver/containers/DriverFormContainer.jsx","views/driver/modals/DriverDeleteComponent.jsx","views/driver/components/DriverDetailComponent.jsx","views/driver/containers/DriverDetailContainer.jsx","modules/app.js","serviceWorker.js","index.js","assets/imgs/not-camera.png"],"names":["Menu","props","react_default","a","createElement","page_header","title","style","borderBottom","urlStorage","upload","data","driver_id","axios","post","getOne","get","concat","active","_id","Title","Typography","DriverComponent","_ref","drivers","onInsert","onDetail","row","type","justify","marginTop","col","span","level","offset","es_button","icon","onClick","divider","list","itemLayout","size","dataSource","renderItem","item","Item","key","actions","extra","src","image_path","NoImg","width","alt","Meta","tag","color","name","description","city","state","Date","birth_date","toLocaleDateString","DriverContainer","_this","history","push","_this2","this","then","res","setState","components_DriverComponent","Object","assign","Component","InputCpf","react_input_mask_default","mask","value","onChange","inputProps","input","placeholder","DriverFormComponent","addresses_street_name","addresses_state","addresses_neighborhood","addresses_country","addresses_city","addresses_street_number","addresses_complement","addresses_postal_code","documents_number_cnh","documents_expires_at_cnh","documents_country_cnh","documents_category_cnh","documents_doc_type_cnh","documents_number_cpf","documents_country_cpf","msgError","documents_doc_type_cpf","onChangeCpf","onChangeBirthDate","onChangeExpireDate","onChangeImage","onReturn","onSave","img","fileInput","marginBottom","es_form","DriverFormComponent_Title","label","vertical","required","date_picker","es_alert","message","display","ref","e","click","block","DriverFormContainer","image","file","m","defineProperty","target","date","dateString","files","URL","createObjectURL","_this$state","includes","FormData","append","success","put","insert","_this$state2","match","params","objectSpread","components_DriverFormComponent","Paragraph","DriverDeleteComponent","visible","onOpen","driver","onClose","onInactive","onGet","children","Fragment","open","modal","okType","okText","cancelText","onOk","onCancel","typography","React","onEdit","onActive","DriverDetailComponent_Title","modals_DriverDeleteComponent","_ref2","descriptions","DriverDetailContainer","DriverDetailComponent","App","BrowserRouter","NavBar","Switch","Route","path","component","DriverView","exact","DriverFormView","DriverDetailView","Redirect","Boolean","window","location","hostname","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7d81c406.chunk.js","sourcesContent":["import React from 'react'\r\nimport { PageHeader } from 'antd';\r\n\r\nconst Menu = (props) => (\r\n    <PageHeader title=\"TRUCKPAD\" style={{ borderBottom: '1px solid rgb(0, 0, 0, 0.30)' }}/>\r\n)\r\n\r\nexport default Menu\r\n","import axios from 'axios'\r\n\r\nexport const urlStorage = 'http://localhost:8000'\r\n\r\nexport function upload(data, driver_id) {\r\n    return axios.post('http://localhost:8000/api/driver/upload/' + driver_id, data)\r\n}\r\n\r\nexport function getAll() {\r\n    return axios.get('http://localhost:8000/api/driver/get-all')\r\n}\r\n\r\nexport function getOne(driver_id) {\r\n    return axios.get(`http://localhost:8000/api/driver/get-one/${driver_id}`)\r\n}\r\n\r\nexport function insert(data) {\r\n    return axios.put('http://localhost:8000/api/driver/insert', {\r\n        name: data.name,\r\n        birth_date: data.birth_date,\r\n        state: data.state,\r\n        city: data.city,\r\n        addresses_street_name: data.addresses_street_name,\r\n        addresses_state: data.addresses_state,\r\n        addresses_country: data.addresses_country,\r\n        addresses_neighborhood: data.addresses_neighborhood,\r\n        addresses_city: data.addresses_city,\r\n        addresses_street_number: data.addresses_street_number,\r\n        addresses_complement: data.addresses_complement,\r\n        addresses_postal_code: data.addresses_postal_code,\r\n        documents_expires_at_cnh: data.documents_expires_at_cnh,\r\n        documents_country_cnh: data.documents_country_cnh,\r\n        documents_number_cnh: data.documents_number_cnh,\r\n        documents_doc_type_cnh: data.documents_doc_type_cnh,\r\n        documents_category_cnh: data.documents_category_cnh,\r\n        documents_country_cpf: data.documents_country_cpf,\r\n        documents_number_cpf: data.documents_number_cpf,\r\n        documents_doc_type_cpf: data.documents_doc_type_cpf,\r\n    })\r\n}\r\n\r\nexport function edit(data) {\r\n    return axios.post(`http://localhost:8000/api/driver/edit/${data.driver_id}`, {\r\n        name: data.name,\r\n        birth_date: data.birth_date,\r\n        state: data.state,\r\n        city: data.city,\r\n        addresses_street_name: data.addresses_street_name,\r\n        addresses_state: data.addresses_state,\r\n        addresses_country: data.addresses_country,\r\n        addresses_neighborhood: data.addresses_neighborhood,\r\n        addresses_city: data.addresses_city,\r\n        addresses_street_number: data.addresses_street_number,\r\n        addresses_complement: data.addresses_complement,\r\n        addresses_postal_code: data.addresses_postal_code,\r\n        documents_expires_at_cnh: data.documents_expires_at_cnh,\r\n        documents_country_cnh: data.documents_country_cnh,\r\n        documents_number_cnh: data.documents_number_cnh,\r\n        documents_doc_type_cnh: data.documents_doc_type_cnh,\r\n        documents_category_cnh: data.documents_category_cnh,\r\n        documents_country_cpf: data.documents_country_cpf,\r\n        documents_number_cpf: data.documents_number_cpf,\r\n        documents_doc_type_cpf: data.documents_doc_type_cpf,\r\n    })\r\n}\r\n\r\nexport function active(data) {\r\n    return axios.post(`http://localhost:8000/api/driver/status/${data._id}`, {\r\n        active: data.active,\r\n    })\r\n}","import React from 'react'\r\nimport { Row, Col, Typography, Button, Tag, List, Divider } from 'antd';\r\nimport NoImg from '../../../assets/imgs/not-camera.png'\r\n\r\nconst { Title } = Typography;\r\n\r\nconst DriverComponent = ({\r\n    drivers,\r\n    onInsert,\r\n    onDetail,\r\n}) => (\r\n        <Row type=\"flex\" justify=\"center\" style={{ marginTop: 10 }}>\r\n            <Col span={12}>\r\n                <Row>\r\n                    <Col span={6}>\r\n                        <Title level={3}>Motoristas</Title>\r\n                    </Col>\r\n                    <Col offset={14} span={4}>\r\n                        <Button type=\"primary\" icon=\"plus\" onClick={onInsert}>Cadastrar</Button>\r\n                    </Col>\r\n                    <Divider />\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <List\r\n                            itemLayout=\"vertical\"\r\n                            size=\"large\"\r\n                            dataSource={drivers}\r\n                            renderItem={item => (\r\n                                <List.Item\r\n                                    key={item._id}\r\n                                    actions={[\r\n                                        <Button type=\"primary\" icon=\"profile\" onClick={() => onDetail(item._id)}>Detalhes</Button>\r\n                                    ]}\r\n                                    extra={\r\n                                        <img src={item.image_path ? item.image_path : NoImg} style={{ width: 180 }} alt=\"foto do motorista\" />\r\n                                    }\r\n                                >\r\n                                    <List.Item.Meta\r\n                                        title={\r\n                                            <div>\r\n                                                {!item.active && (<Tag color=\"#f50\">Desativado</Tag>)}\r\n                                                <b>{item.name}</b>\r\n                                            </div>\r\n                                        }\r\n                                        description={\r\n                                            <div>\r\n                                                <p>Cidade: {item.city}</p>\r\n                                                <p>Estado: {item.state}</p>\r\n                                                <p>Data de nascimento: {new Date(item.birth_date).toLocaleDateString('en-GB')}</p>\r\n                                            </div>\r\n                                        }\r\n                                    />\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n\r\nexport default DriverComponent","import React, { Component } from 'react';\r\nimport { getAll } from '../../../common/api'\r\n\r\nimport DriverComponent from '../components/DriverComponent'\r\n\r\nclass DriverContainer extends Component {\r\n\r\n    state = {\r\n        drivers: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        getAll().then((res) => {\r\n            this.setState({\r\n                drivers: res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    onInsert = () => {\r\n        this.props.history.push('/cadastrar')\r\n    }\r\n\r\n    onDetail = (driver_id) => {\r\n        this.props.history.push(`/${driver_id}/detalhes`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DriverComponent\r\n                {...this.state}\r\n                {...this.props}\r\n                onInsert={this.onInsert}\r\n                onDetail={this.onDetail}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default DriverContainer","import React from 'react'\r\nimport InputMask from 'react-input-mask';\r\nimport { Input } from 'antd'\r\n\r\nexport default (props) => (\r\n    <InputMask mask=\"999.999.999-99\" value={props.value} onChange={props.onChange}>\r\n        {(inputProps) => <Input placeholder={props.placeholder} {...inputProps} />}\r\n    </InputMask>\r\n)","import React from 'react'\r\nimport { Row, Col, Typography, Button, Form, Input, DatePicker, Alert } from 'antd';\r\nimport InputCpf from '../../../components/input/InputCpf'\r\n\r\nconst { Title } = Typography;\r\n\r\nconst DriverFormComponent = ({\r\n    name,\r\n    birth_date,\r\n    state,\r\n    city,\r\n    addresses_street_name,\r\n    addresses_state,\r\n    addresses_country,\r\n    addresses_neighborhood,\r\n    addresses_city,\r\n    addresses_street_number,\r\n    addresses_complement,\r\n    addresses_postal_code,\r\n    documents_expires_at_cnh,\r\n    documents_country_cnh,\r\n    documents_number_cnh,\r\n    documents_doc_type_cnh,\r\n    documents_category_cnh,\r\n    documents_country_cpf,\r\n    documents_number_cpf,\r\n    documents_doc_type_cpf,\r\n    msgError,\r\n    onChange,\r\n    onChangeCpf,\r\n    onChangeBirthDate,\r\n    onChangeExpireDate,\r\n    onChangeImage,\r\n    onReturn,\r\n    onSave,\r\n    img,\r\n    fileInput\r\n}) => (\r\n        <Row type=\"flex\" justify=\"center\" style={{ marginTop: 10, marginBottom: 10 }}>\r\n            <Col span={12}>\r\n                <Row>\r\n                    <Col span={3}>\r\n                        <Button type=\"primary\" icon=\"left\" onClick={onReturn}>Voltar</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Title level={4}>Dados pessoais</Title>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={23}>\r\n                                    <Form.Item label=\"Nome:\" vertical required>\r\n                                        <Input placeholder=\"Digite o nome completo do motorista\" name='name' value={name} onChange={onChange} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={12}>\r\n                                    <Form.Item label=\"CPF:\" vertical required>\r\n                                        <InputCpf placeholder=\"Digite o CPF\" value={documents_number_cpf} onChange={onChangeCpf} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col offset={1} span={11}>\r\n                                    <Form.Item label=\"Data de nascimento:\" vertical required>\r\n                                        <DatePicker onChange={onChangeBirthDate} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"CNH:\" vertical required>\r\n                                        <Input placeholder=\"Digite a CNH\" name='documents_number_cnh' value={documents_number_cnh} onChange={onChange} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col offset={1} span={7}>\r\n                                    <Form.Item label=\"Categoria da CNH:\" vertical required>\r\n                                        <Input placeholder=\"Ex.: ABCD\" name='documents_category_cnh' value={documents_category_cnh} onChange={onChange} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col offset={1} span={7}>\r\n                                    <Form.Item label=\"Data de expiração:\" vertical required>\r\n                                        <DatePicker onChange={onChangeExpireDate} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Title level={4}>Endereço completo</Title>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={19}>\r\n                                    <Form.Item label=\"Endereço:\" vertical required>\r\n                                        <Input placeholder=\"Digite o endereço completo\" name='addresses_street_name' value={addresses_street_name} onChange={onChange} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col offset={1} span={4}>\r\n                                    <Form.Item label=\"Número:\" vertical>\r\n                                        <Input placeholder=\"Digite o nº\" name='addresses_street_number' value={addresses_street_number} onChange={onChange} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"Complemento:\" vertical>\r\n                                        <Input placeholder=\"Digite o complemento\" name='addresses_complement' value={addresses_complement} onChange={onChange} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col offset={1} span={7}>\r\n                                    <Form.Item label=\"Bairro:\" vertical>\r\n                                        <Input placeholder=\"Digite o bairro\" name='addresses_neighborhood' value={addresses_neighborhood} onChange={onChange} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col offset={1} span={7}>\r\n                                    <Form.Item label=\"CEP:\" vertical required>\r\n                                        <Input placeholder=\"Digite o CEP\" name='addresses_postal_code' value={addresses_postal_code} onChange={onChange} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={12}>\r\n                                    <Form.Item label=\"Cidade:\" vertical required>\r\n                                        <Input placeholder=\"Digite a cidade\" name='addresses_city' value={addresses_city} onChange={onChange} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col offset={1} span={11}>\r\n                                    <Form.Item label=\"Estado:\" vertical required>\r\n                                        <Input placeholder=\"Digite o estado\" name='addresses_state' value={addresses_state} onChange={onChange} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div>\r\n                                        {msgError && (\r\n                                            <Alert message={msgError} type=\"error\" />\r\n                                        )}\r\n                                    </div>\r\n                                    <Button type=\"primary\" icon=\"save\" onClick={onSave}>Salvar</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col span={4}>\r\n                {img()}\r\n                <div>\r\n                    <input\r\n                        type=\"file\"\r\n                        style={{ display: 'none' }}\r\n                        onChange={onChangeImage}\r\n                        ref={e => { fileInput = e }} />\r\n                    <Button type=\"primary\" icon=\"camera\" onClick={() => fileInput.click()} block>Adicionar foto</Button>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\nexport default DriverFormComponent","import React, { Component } from 'react';\r\nimport DriverFormComponent from '../components/DriverFormComponent'\r\nimport { getOne, insert, edit, urlStorage, upload } from '../../../common/api'\r\nimport { message } from 'antd';\r\nimport NoImg from '../../../assets/imgs/not-camera.png'\r\n\r\nclass DriverFormContainer extends Component {\r\n\r\n    state = {\r\n        driver_id: null,\r\n        msgError: null,\r\n        image: null,\r\n        file: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { driver_id } = this.props.match.params\r\n\r\n        if (driver_id) {\r\n            getOne(driver_id).then(res => {\r\n                this.setState({\r\n                    driver_id,\r\n                    ...res.data,\r\n                    image_path: res.data.image_path ? `${urlStorage}/${res.data.image_path}` : null,\r\n                })\r\n            })\r\n        } else {\r\n            this.setState({\r\n                driver_id: null,\r\n                msgError: null,\r\n                image: null,\r\n                file: null,\r\n                name: '',\r\n                birth_date: '',\r\n                state: '',\r\n                city: '',\r\n                addresses_street_name: '',\r\n                addresses_state: '',\r\n                addresses_country: '',\r\n                addresses_neighborhood: '',\r\n                addresses_city: '',\r\n                addresses_street_number: '',\r\n                addresses_complement: '',\r\n                addresses_postal_code: '',\r\n                documents_expires_at_cnh: '',\r\n                documents_country_cnh: '',\r\n                documents_number_cnh: '',\r\n                documents_doc_type_cnh: '',\r\n                documents_category_cnh: '',\r\n                documents_country_cpf: '',\r\n                documents_number_cpf: '',\r\n                documents_doc_type_cpf: '',\r\n            })\r\n        }\r\n    }\r\n\r\n    onChange = (e, m) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeCpf = (e, m) => {\r\n        this.setState({\r\n            documents_number_cpf: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeBirthDate = (date, dateString) => {\r\n        this.setState({\r\n            birth_date: date\r\n        })\r\n    }\r\n\r\n    onChangeExpireDate = (date, dateString) => {\r\n        this.setState({\r\n            documents_expires_at_cnh: date\r\n        })\r\n    }\r\n\r\n    onChangeImage = (e) => {\r\n        let file = e.target.files[0]\r\n        this.setState({\r\n            image: URL.createObjectURL(file),\r\n            file\r\n        })\r\n    }\r\n\r\n    onReturn = () => {\r\n        const { driver_id } = this.state\r\n        if (driver_id) {\r\n            this.props.history.push(`/${driver_id}/detalhes`)\r\n        } else {\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    onSave = () => {\r\n        const {\r\n            driver_id, name, birth_date, state, city, file,\r\n            addresses_street_name, addresses_state, addresses_country, addresses_neighborhood, addresses_city, addresses_street_number, addresses_complement, addresses_postal_code,\r\n            documents_expires_at_cnh, documents_country_cnh, documents_number_cnh, documents_doc_type_cnh, documents_category_cnh, documents_country_cpf, documents_number_cpf, documents_doc_type_cpf,\r\n        } = this.state\r\n\r\n        if (name === '') {\r\n            this.setState({ msgError: 'Por favor, preencher o nome do motorista.' })\r\n        } else if (documents_number_cpf.includes('_')) {\r\n            this.setState({ msgError: 'Por favor, verifique o CPF.' })\r\n        } else if (birth_date === '') {\r\n            this.setState({ msgError: 'Por favor, selecione a data de nascimento.' })\r\n        } else if (documents_number_cnh === '') {\r\n            this.setState({ msgError: 'Por favor, preencher o número da CNH.' })\r\n        } else if (documents_category_cnh === '') {\r\n            this.setState({ msgError: 'Por favor, selecione a categoria da CNH.' })\r\n        } else if (addresses_street_name === '') {\r\n            this.setState({ msgError: 'Por favor, preencher o endereço completo.' })\r\n        } else if (addresses_postal_code === '') {\r\n            this.setState({ msgError: 'Por favor, preencher o CEP.' })\r\n        } else if (addresses_city === '') {\r\n            this.setState({ msgError: 'Por favor, preencher a cidade.' })\r\n        } else if (addresses_state === '') {\r\n            this.setState({ msgError: 'Por favor, preencher o estado.' })\r\n        } else {\r\n            this.setState({ msgError: null })\r\n            if (driver_id) {\r\n                edit({\r\n                    driver_id,\r\n                    name,\r\n                    birth_date,\r\n                    state,\r\n                    city,\r\n                    addresses_street_name,\r\n                    addresses_state,\r\n                    addresses_country,\r\n                    addresses_neighborhood,\r\n                    addresses_city,\r\n                    addresses_street_number,\r\n                    addresses_complement,\r\n                    addresses_postal_code,\r\n                    documents_expires_at_cnh,\r\n                    documents_country_cnh,\r\n                    documents_number_cnh,\r\n                    documents_doc_type_cnh,\r\n                    documents_category_cnh,\r\n                    documents_country_cpf,\r\n                    documents_number_cpf,\r\n                    documents_doc_type_cpf,\r\n                }).then(res => {\r\n                    if (file) {\r\n                        const data = new FormData()\r\n                        data.append('file', file)\r\n                        return upload(data, driver_id)\r\n                    } else {\r\n                        return null\r\n                    }\r\n                }).then(() => {\r\n                    this.onReturn()\r\n                    message.success('Motorista editado com sucesso.')\r\n                })\r\n            } else {\r\n                insert({\r\n                    driver_id,\r\n                    name,\r\n                    birth_date,\r\n                    state,\r\n                    city,\r\n                    addresses_street_name,\r\n                    addresses_state,\r\n                    addresses_country,\r\n                    addresses_neighborhood,\r\n                    addresses_city,\r\n                    addresses_street_number,\r\n                    addresses_complement,\r\n                    addresses_postal_code,\r\n                    documents_expires_at_cnh,\r\n                    documents_country_cnh,\r\n                    documents_number_cnh,\r\n                    documents_doc_type_cnh,\r\n                    documents_category_cnh,\r\n                    documents_country_cpf,\r\n                    documents_number_cpf,\r\n                    documents_doc_type_cpf,\r\n                }).then(res => {\r\n                    if (file) {\r\n                        const data = new FormData()\r\n                        data.append('file', file)\r\n                        return upload(data, res.data)\r\n                    } else {\r\n                        return null\r\n                    }\r\n                }).then(() => {\r\n                    this.onReturn()\r\n                    message.success('Motorista cadastrado com sucesso.')\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    img = () => {\r\n        const { image, image_path } = this.state\r\n        if (image) {\r\n            return <img src={image} alt=\"foto do motorista\" style={{ width: 240 }} />\r\n        } else if (image_path) {\r\n            return <img src={image_path} alt=\"foto do motorista\" style={{ width: 240 }} />\r\n        } else {\r\n            return <img src={NoImg} alt=\"foto do motorista\" style={{ width: 240 }} />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DriverFormComponent\r\n                {...this.state}\r\n                {...this.props}\r\n                onChange={this.onChange}\r\n                onChangeCpf={this.onChangeCpf}\r\n                onChangeBirthDate={this.onChangeBirthDate}\r\n                onChangeExpireDate={this.onChangeExpireDate}\r\n                onChangeImage={this.onChangeImage}\r\n                onReturn={this.onReturn}\r\n                onSave={this.onSave}\r\n                img={this.img}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default DriverFormContainer","import React from 'react'\r\nimport { Modal, Typography, message } from 'antd'\r\nimport { active } from '../../../common/api'\r\nconst { Paragraph } = Typography;\r\n\r\nclass DriverDeleteComponent extends React.Component {\r\n\r\n    state = {\r\n        visible: false\r\n    }\r\n\r\n    onOpen = () => {\r\n        this.setState({\r\n            visible: true,\r\n            ...this.props.driver\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({ visible: false })\r\n    }\r\n\r\n    onInactive = () => {\r\n        const { _id } = this.state\r\n        active({ _id, active: false }).then(() => {\r\n            this.onClose()\r\n            this.props.onGet(_id)\r\n            message.success('Motorista desativado com sucesso.')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props\r\n        const { visible, name } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                {children({ open: this.onOpen })}\r\n                <Modal\r\n                    title=\"Desativar motorista\"\r\n                    visible={visible}\r\n                    okType='danger'\r\n                    okText='Sim'\r\n                    cancelText='Não'\r\n                    onOk={this.onInactive}\r\n                    onCancel={this.onClose}\r\n                >\r\n                    <Typography>\r\n                        <Paragraph>\r\n                            Tem certeza que deseja desativar o motorista {name}?\r\n                        </Paragraph>\r\n                    </Typography>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DriverDeleteComponent;","import React from 'react'\r\nimport { Row, Col, Typography, Button, Descriptions, Divider } from 'antd';\r\n\r\nimport NoImg from '../../../assets/imgs/not-camera.png'\r\nimport DriverDeleteComponent from '../modals/DriverDeleteComponent'\r\n\r\nconst { Title } = Typography;\r\n\r\nconst DriverComponent = ({\r\n    image_path,\r\n    _id,\r\n    name,\r\n    birth_date,\r\n    state,\r\n    city,\r\n    addresses_street_name,\r\n    addresses_state,\r\n    addresses_country,\r\n    addresses_neighborhood,\r\n    addresses_city,\r\n    addresses_street_number,\r\n    addresses_complement,\r\n    addresses_postal_code,\r\n    documents_expires_at_cnh,\r\n    documents_country_cnh,\r\n    documents_number_cnh,\r\n    documents_doc_type_cnh,\r\n    documents_category_cnh,\r\n    documents_country_cpf,\r\n    documents_number_cpf,\r\n    documents_doc_type_cpf,\r\n    active,\r\n    onGet,\r\n    onEdit,\r\n    onReturn,\r\n    onActive\r\n}) => (\r\n        <Row type=\"flex\" justify=\"center\" style={{ marginTop: 10 }}>\r\n            <Col span={16}>\r\n                <Row>\r\n                    <Col span={4}>\r\n                        <Button type=\"primary\" icon=\"left\" onClick={onReturn}>Voltar</Button>\r\n                    </Col>\r\n                    <Col span={20}>\r\n                        <Title level={3}>Detalhes do motorista</Title>\r\n                    </Col>\r\n                    <Divider />\r\n                </Row>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <img src={image_path ? image_path : NoImg} style={{ width: 240 }} alt=\"foto do motorista\" />\r\n                    </Col>\r\n                    <Col span={16}>\r\n                        <Button type=\"primary\" icon=\"edit\" onClick={onEdit}>Editar</Button>\r\n                        {active ? (\r\n                            <DriverDeleteComponent onGet={onGet} driver={{ name, _id }}>\r\n                                {({ open }) => (\r\n                                    <Button type=\"danger\" icon=\"delete\" onClick={open}>Desativar</Button>\r\n                                )}\r\n                            </DriverDeleteComponent>\r\n                        ) : (\r\n                                <Button onClick={onActive}>Ativar</Button>\r\n                            )}\r\n                        <Descriptions title=\"Dados\">\r\n                            <Descriptions.Item label=\"Nome\">{name}</Descriptions.Item>\r\n                            {active ? (\r\n                                <Descriptions.Item label=\"Status\">Ativo</Descriptions.Item>\r\n                            ) : (\r\n                                    <Descriptions.Item label=\"Status\">Desativado</Descriptions.Item>\r\n                                )}\r\n                            <Descriptions.Item label=\"Data de nascimento\">{new Date(birth_date).toLocaleDateString('en-GB')}</Descriptions.Item>\r\n                        </Descriptions>\r\n                        <Descriptions title=\"Documentos\">\r\n                            <Descriptions.Item label=\"CPF\">{documents_number_cpf}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"CNH\">{documents_number_cnh}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Categoria da CNH\">{documents_category_cnh}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Data da expiração da CNH\"> {new Date(documents_expires_at_cnh).toLocaleDateString('en-GB')}</Descriptions.Item>\r\n                        </Descriptions>\r\n                        <Descriptions title=\"Endereço completo\">\r\n                            <Descriptions.Item label=\"Endereço\">{addresses_street_name}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Número\">{addresses_street_number}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Complemento\">{addresses_complement}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Bairro\">{addresses_neighborhood}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"CEP\">{addresses_postal_code}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Cidade\">{addresses_city}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Estado\">{addresses_state}</Descriptions.Item>\r\n                        </Descriptions>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n\r\nexport default DriverComponent","import React, { Component } from 'react';\r\nimport { getOne, active, urlStorage } from '../../../common/api'\r\nimport { message } from 'antd';\r\n\r\nimport DriverDetailComponent from '../components/DriverDetailComponent'\r\n\r\nclass DriverDetailContainer extends Component {\r\n\r\n    state = {\r\n        driver_id: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { driver_id } = this.props.match.params\r\n        this.onGet(driver_id)\r\n    }\r\n\r\n    onGet = (driver_id) => {\r\n        getOne(driver_id).then((res) => {\r\n            this.setState({\r\n                driver_id,\r\n                ...res.data,\r\n                image_path: res.data.image_path ? `${urlStorage}/${res.data.image_path}` : null,\r\n            })\r\n        })\r\n    }\r\n\r\n    onEdit = () => {\r\n        const { driver_id } = this.state\r\n        this.props.history.push(`/${driver_id}/editar`)\r\n    }\r\n\r\n    onReturn = () => {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    onActive = () => {\r\n        const { _id } = this.state\r\n        active({ _id, active: true }).then(() => {\r\n            this.onGet(_id)\r\n            message.success('Motorista ativado com sucesso.')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DriverDetailComponent\r\n                {...this.state}\r\n                {...this.props}\r\n                onGet={this.onGet}\r\n                onEdit={this.onEdit}\r\n                onReturn={this.onReturn}\r\n                onActive={this.onActive}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default DriverDetailContainer","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport MenuView from '../components/NavBar'\r\nimport DriverView from '../views/driver/containers/DriverContainer'\r\nimport DriverFormView from '../views/driver/containers/DriverFormContainer'\r\nimport DriverDetailView from '../views/driver/containers/DriverDetailContainer'\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div>\r\n                    <MenuView />\r\n                    <Switch>\r\n                        <Route path=\"/\" component={DriverView} exact />\r\n                        <Route path=\"/cadastrar\" component={DriverFormView} exact />\r\n                        <Route path=\"/:driver_id/editar\" component={DriverFormView} exact />\r\n                        <Route path=\"/:driver_id/detalhes\" component={DriverDetailView} exact />\r\n                        <Redirect path='/' />\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './modules/app';\r\nimport 'antd/dist/antd.css'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/not-camera.a904f40f.png\";"],"sourceRoot":""}